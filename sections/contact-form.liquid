{{ 'section-contact-form.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<div
  class="contact-form color-{{ section.settings.color_scheme }} section-{{ section.id }}-padding{% if section.settings.background_image != blank %} contact-form--has-bg{% endif %}{% if section.settings.enable_grid_effect %} contact-form--grid-effect{% endif %}{% if section.settings.enable_animation %} contact-form--animated{% endif %}"
  {% if section.settings.background_image != blank %}
    style="background-image: url('{{ section.settings.background_image | image_url: width: 1920 }}'); background-size: cover; background-position: center; background-repeat: no-repeat;"
  {% endif %}
>
  <div class="page-width">
    <div class="contact-form__container">
      <div class="contact-form__info">
        <div class="contact-form__title">{{ section.settings.title }}</div>
      </div>

      <div class="contact-form__form-panel">
        <div class="contact-form__form-content">
          {%- form 'customer', id: 'NewsletterForm', class: 'contact-form__form' -%}
            {%- if form.posted_successfully? -%}
              <div class="contact-form__message contact-form__message--success">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
                  <polyline points="22,4 12,14.01 9,11.01"></polyline>
                </svg>
                {{ section.settings.success_message }}
              </div>
            {%- elsif form.errors -%}
              <div class="contact-form__message contact-form__message--error">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <circle cx="12" cy="12" r="10"></circle>
                  <line x1="15" y1="9" x2="9" y2="15"></line>
                  <line x1="9" y1="9" x2="15" y2="15"></line>
                </svg>
                {{ form.errors.messages.email }}
              </div>
            {%- endif -%}

            <div class="contact-form__field contact-form__field--inline">
              <input
                type="email"
                id="NewsletterForm-email"
                name="contact[email]"
                class="contact-form__input"
                placeholder="Email"
                value="{{ form.email | escape }}"
                required
                aria-required="true"
              >
              <button type="submit" class="contact-form__submit-btn">
                {{ section.settings.button_label }}
              </button>
            </div>

            <div class="contact-form__checkbox">
              <input
                type="checkbox"
                id="NewsletterForm-consent"
                name="consent"
                class="contact-form__checkbox-input"
                required
              >
              <label for="NewsletterForm-consent" class="contact-form__checkbox-label">
                {{ section.settings.checkbox_label }}
              </label>
            </div>
          {%- endform -%}
        </div>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const contactForm = document.querySelector('.contact-form');
  
  // Animation
  if (contactForm && contactForm.classList.contains('contact-form--animated')) {
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          contactForm.classList.add('contact-form--animate-in');
          const animationType = '{{ section.settings.animation_type | default: "slide-up" }}';
          contactForm.classList.add(`contact-form--animate-${animationType}`);
          observer.unobserve(entry.target);
        }
      });
    }, { threshold: 0.1, rootMargin: '0px 0px -50px 0px' });
    observer.observe(contactForm);
  }

  // Grid Effect
  if (contactForm && contactForm.classList.contains('contact-form--grid-effect')) {
    const gridStyle = '{{ section.settings.grid_style | default: "dots" }}';
    const gridSize = '{{ section.settings.grid_size | default: 20 }}';
    contactForm.classList.add(`contact-form--grid-${gridStyle}`);
    contactForm.style.setProperty('--grid-size', `${gridSize}px`);
  }

  // Background Opacity
  const backgroundOpacity = '{{ section.settings.background_opacity | default: 20 }}';
  if (contactForm && contactForm.classList.contains('contact-form--has-bg')) {
    contactForm.style.setProperty('--bg-opacity', backgroundOpacity / 100);
  }
});
</script>

{% schema %}
{
  "name": "Newsletter Signup",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "Receber novidades & promoções"
    },
    {
      "type": "text",
      "id": "button_label",
      "label": "Button Label",
      "default": "Subscrever"
    },
    {
      "type": "text",
      "id": "checkbox_label",
      "label": "Checkbox Label",
      "default": "Concordo em receber comunicações."
    },
    {
      "type": "text",
      "id": "success_message",
      "label": "Success Message",
      "default": "Obrigado! Confirme no email."
    },
    {
      "type": "select",
      "id": "color_scheme",
      "label": "Color Scheme",
      "options": [
        { "value": "background-1", "label": "Background 1" },
        { "value": "background-2", "label": "Background 2" },
        { "value": "inverse", "label": "Inverse" },
        { "value": "accent-1", "label": "Accent 1" },
        { "value": "accent-2", "label": "Accent 2" }
      ],
      "default": "background-1"
    },
    {
      "type": "image_picker",
      "id": "background_image",
      "label": "Background Image"
    },
    {
      "type": "range",
      "id": "background_opacity",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "%",
      "label": "Background Image Opacity",
      "default": 20
    },
    {
      "type": "checkbox",
      "id": "enable_grid_effect",
      "default": false,
      "label": "Enable Grid Effect"
    },
    {
      "type": "select",
      "id": "grid_style",
      "options": [
        { "value": "dots", "label": "Dots" },
        { "value": "lines", "label": "Lines" },
        { "value": "squares", "label": "Squares" }
      ],
      "default": "dots",
      "label": "Grid Style"
    },
    {
      "type": "range",
      "id": "grid_size",
      "min": 10,
      "max": 50,
      "step": 5,
      "unit": "px",
      "label": "Grid Size",
      "default": 20
    },
    {
      "type": "checkbox",
      "id": "enable_animation",
      "default": true,
      "label": "Enable Animation Effects"
    },
    {
      "type": "select",
      "id": "animation_type",
      "options": [
        { "value": "fade-in", "label": "Fade In" },
        { "value": "slide-up", "label": "Slide Up" },
        { "value": "slide-left", "label": "Slide Left" },
        { "value": "slide-right", "label": "Slide Right" },
        { "value": "zoom-in", "label": "Zoom In" }
      ],
      "default": "slide-up",
      "label": "Animation Type"
    },
    {
      "type": "range",
      "id": "animation_duration",
      "min": 0.3,
      "max": 2.0,
      "step": 0.1,
      "unit": "s",
      "label": "Animation Duration",
      "default": 0.6
    },
    {
      "type": "range",
      "id": "animation_delay",
      "min": 0,
      "max": 1.0,
      "step": 0.1,
      "unit": "s",
      "label": "Animation Delay",
      "default": 0.2
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding top",
      "default": 60
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding bottom",
      "default": 60
    }
  ],
  "presets": [
    { "name": "Newsletter Signup" }
  ]
}
{% endschema %}